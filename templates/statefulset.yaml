apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis-stack.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "redis-stack.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "redis-stack.name" . }}-service
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "redis-stack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "redis-stack.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-redis-stack
          image: "{{ .Values.image.repository }}:{{ $.Chart.AppVersion }}"
          command:
            - /bin/bash
            - -c
            - |
              set -ex

              hostname_regex='-([0-9]+)$'
              if [[ `hostname` =~ ${hostname_regex} ]]; then
                ordinal=${BASH_REMATCH[1]}
              else
                exit 1
              fi

              config_map_path="/mnt"
              config_dest="/etc/redis-config.conf"

              if [[ ${ordinal} -eq 0 ]]; then
                cp "${config_map_path}/master.conf" "${config_dest}"
              else
                cp "${config_map_path}/replica.conf" "${config_dest}"
              fi
          {{- with .Values.initVolumeMounts }}
          volumeMounts:
            - name: config-map
              mountPath: /mnt
            {{- toYaml . | nindent 12 }}
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ $.Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          command:
            - redis-stack-server
            - /etc/redis-config.conf
          volumeMounts:
            {{- range .Values.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
            {{- end }}
      volumes:
        - name: config-map
          configMap:
            name: {{ .Values.configMap.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    {{- range .Values.volumes }}
    - metadata:
        name: {{ .name }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .request }}
        storageClassName: {{ .storageClassName }}
    {{- end }}
